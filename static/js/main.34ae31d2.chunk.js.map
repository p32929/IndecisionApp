{"version":3,"sources":["Playground/IndecisionApp/AppComponents/Header.js","Playground/IndecisionApp/AppComponents/Action.js","Playground/IndecisionApp/AppComponents/Option.js","Playground/IndecisionApp/AppComponents/Options.js","Playground/IndecisionApp/AppComponents/AddOptions.js","Playground/IndecisionApp/AppComponents/OptionModal.js","Playground/IndecisionApp/IndecisionApp.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","title","subtitle","Action","onClick","handlePick","disabled","hasOptions","Option","count","optionText","e","handleDeleteOption","Options","handleDeleteOptions","options","length","map","option","index","AppComponents_Option","key","AddOptions","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleAddOption","bind","assertThisInitialized","preventDefault","target","elements","value","trim","onSubmit","type","name","Component","OptionModal","lib_default","isOpen","selectedOption","contentLabel","onRequestClose","handleClearSelectedOption","closeTimeoutMS","IndecisionApp","state","undefined","setState","console","log","json","localStorage","getItem","JSON","parse","prevProps","prevState","stringify","setItem","indexOf","alert","concat","otr","ps","filter","randomNum","Math","floor","random","AppComponents_Header","AppComponents_Action","AppComponents_Options","AppComponents_AddOptions","AppComponents_OptionModal","App","Playground_IndecisionApp_IndecisionApp","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34ae31d2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = (props) => (\r\n    <div className='header'>\r\n        <div className='container'>\r\n            <h1 className='header_title'>{props.title}</h1>\r\n            <h2 className='header_subtitle'>{props.subtitle}</h2>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Action = (props) => (\r\n    <div>\r\n        <button\r\n            className='big_button'\r\n            onClick={props.handlePick}\r\n            disabled={!props.hasOptions} >\r\n            What should I do?\r\n        </button>\r\n    </div>\r\n)\r\n\r\nexport default Action;\r\n","import React from 'react';\r\n\r\nconst Option = (props) => (\r\n    <div className='option'>\r\n        <p className='option_text'>{props.count}. {props.optionText}</p>\r\n        <button\r\n            className='add_options_button button_link'\r\n            onClick={(e) => {\r\n                props.handleDeleteOption(props.optionText)\r\n            }}>\r\n            Remove\r\n        </button>\r\n    </div>\r\n)\r\n\r\nexport default Option;\r\n","import React from 'react';\r\nimport Option from \"./Option\";\r\n\r\nconst Options = (props) => (\r\n    <div>\r\n        <div className='widget_header'>\r\n            <h3 className='widget_header_title'>Your options</h3>\r\n            <button className='add_options_button button_link'\r\n                    onClick={props.handleDeleteOptions}>Remove All\r\n            </button>\r\n        </div>\r\n\r\n        {props.options.length === 0 && <p className='widget_message'>Please add an option to get started</p>}\r\n\r\n        {\r\n            props.options.map((option, index) =>\r\n                <Option\r\n                    handleDeleteOption={props.handleDeleteOption}\r\n                    key={option}\r\n                    count={index+1}\r\n                    optionText={option}\r\n                />\r\n            )\r\n        }\r\n    </div>\r\n)\r\n\r\nexport default Options;\r\n","import React, {Component} from 'react';\r\n\r\nclass AddOptions extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleAddOption = this.handleAddOption.bind(this)\r\n    }\r\n\r\n    handleAddOption(e) {\r\n        e.preventDefault()\r\n\r\n        var option = e.target.elements.option.value.trim()\r\n        if (option) {\r\n            this.props.handleAddOption(option)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className='add_option' onSubmit={this.handleAddOption}>\r\n                    <input className='add_option_input' type=\"text\" name=\"option\"/>\r\n                    <button className='add_options_button'>Add option</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddOptions;","import React from 'react';\r\nimport Modal from 'react-modal'\r\n\r\nconst OptionModal = (props) => {\r\n    return (\r\n        <Modal\r\n            isOpen={!!props.selectedOption}\r\n            contentLabel=\"Selected Option\"\r\n            onRequestClose={props.handleClearSelectedOption}\r\n            closeTimeoutMS={200}\r\n            className='modal'>\r\n            <h3 className='modal__title'>Selected Option</h3>\r\n            {\r\n                props.selectedOption && <p className='modal__body'>{props.selectedOption}</p>\r\n            }\r\n\r\n            <button className='add_options_button'\r\n                onClick={props.handleClearSelectedOption}>OK</button>\r\n\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default OptionModal;\r\n","import React, {Component} from 'react';\r\nimport Header from \"./AppComponents/Header\";\r\nimport Action from \"./AppComponents/Action\";\r\nimport Options from \"./AppComponents/Options\";\r\nimport AddOptions from \"./AppComponents/AddOptions\";\r\nimport OptionModal from \"./AppComponents/OptionModal\";\r\n\r\nclass IndecisionApp extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleDeleteOptions = this.handleDeleteOptions.bind(this)\r\n        this.handleDeleteOption = this.handleDeleteOption.bind(this)\r\n        this.handlePick = this.handlePick.bind(this)\r\n        this.handleAddOption = this.handleAddOption.bind(this)\r\n        this.handleClearSelectedOption = this.handleClearSelectedOption.bind(this)\r\n\r\n        this.state = {\r\n            options: [],\r\n            selectedOption: undefined\r\n        }\r\n    }\r\n\r\n    handleClearSelectedOption() {\r\n        this.setState(() => ({\r\n            selectedOption: undefined\r\n        }))\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"componentDidMount\")\r\n\r\n        try {\r\n            var json = localStorage.getItem('options')\r\n            var options = JSON.parse(json)\r\n            if (options) {\r\n                this.setState(() => ({options: options}))\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(\"componentDidUpdate\")\r\n\r\n        if (prevState.options.length !== this.state.options.length) {\r\n            var json = JSON.stringify(this.state.options)\r\n            localStorage.setItem('options', json)\r\n        }\r\n    }\r\n\r\n    handleAddOption(option) {\r\n        if (this.state.options.indexOf(option) > -1) {\r\n            alert('This option already exists')\r\n        } else {\r\n            this.setState((prevState) => ({options: prevState.options.concat([option])}))\r\n        }\r\n    }\r\n\r\n    handleDeleteOption(otr) {\r\n        this.setState((ps) => ({\r\n            options: ps.options.filter((option) => {\r\n                return otr !== option;\r\n            })\r\n        }))\r\n    }\r\n\r\n    handleDeleteOptions() {\r\n        this.setState({options: []})\r\n    }\r\n\r\n    handlePick() {\r\n        var randomNum = Math.floor(Math.random() * this.state.options.length)\r\n        var option = this.state.options[randomNum]\r\n\r\n        this.setState(() => ({\r\n            selectedOption: option\r\n        }))\r\n    }\r\n\r\n    render() {\r\n\r\n        var title = \"Indecision App\"\r\n        var subtitle = \"Put your life in the hands of a computer\"\r\n\r\n        return (\r\n            <div>\r\n                <Header title={title} subtitle={subtitle}/>\r\n\r\n                <div className='container'>\r\n                    <Action\r\n                        hasOptions={this.state.options.length > 0}\r\n                        handlePick={this.handlePick}\r\n                    />\r\n                    <div className='widget'>\r\n                        <Options options={this.state.options}\r\n                                 handleDeleteOptions={this.handleDeleteOptions}\r\n                                 handleDeleteOption={this.handleDeleteOption}\r\n                        />\r\n                        <AddOptions\r\n                            handleAddOption={this.handleAddOption}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <OptionModal\r\n                    selectedOption={this.state.selectedOption}\r\n                    handleClearSelectedOption={this.handleClearSelectedOption}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndecisionApp;","import React, {Component} from 'react';\nimport 'normalize.css/normalize.css'\nimport './App.css';\nimport IndecisionApp from \"./Playground/IndecisionApp/IndecisionApp\";\n\nclass App extends Component {\n\n    render() {\n        return (\n            <IndecisionApp/>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}